<?php

namespace Tests\Feature\Services;

use App\Actions\Lead\DataTransferObjects\LeadData;
use App\Contracts\Lead\CreatesNewLeadContract;
use App\Events\Lead\LeadReceived;
use App\Http\Services\LeadService;
use App\Jobs\Lead\ImportNewLead;
use App\Models\Lead\Lead;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\Mocks\Lead\CreateNewLeadMock;
use Tests\TestCase;

class LeadServiceTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    protected LeadService $service;

    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->app->bind(CreatesNewLeadContract::class, CreateNewLeadMock::class);

        $this->service = new LeadService();
    }

    /**
     *
     */
    public function test_that_when_a_provider_sends_us_lead_data_we_will_create_a_new_lead() {
        $data = new LeadData();

        $this->expectsEvents(LeadReceived::class);
        $this->expectsJobs(ImportNewLead::class);
        $lead = $this->service->createNewLeadWithDataFromLeadProvider($data);
        $this->assertInstanceOf(Lead::class, $lead);
    }
}

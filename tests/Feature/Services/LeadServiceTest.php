<?php

namespace Tests\Feature\Services;

use App\Events\Lead\LeadReceived;
use App\Models\Lead\Lead;
use App\Models\Lead\LeadStatus;
use App\Services\DataTransferObjects\LeadData;
use App\Services\LeadService;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class LeadServiceTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    protected LeadService $service;

    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        //$this->app->bind(CreatesNewLeadContract::class, CreateNewLeadMock::class);

        $this->service = new LeadService();
    }

    /**
     *
     */
    public function test_that_we_can_create_a_new_lead() {
        /** @var LeadData $dto */
        $dto = LeadData::factory()->unscheduled()->make([]);

        $lead = $this->service->createLead($dto);
        $this->assertInstanceOf(Lead::class, $lead);

        $this->assertDatabaseHas('leads', [
            'client_id' => $dto->client_id,
            'lead_type_id' => $dto->lead_type_id,
            'lead_status_id' => LeadStatus::DRAFT,
            'first_name' => $dto->first_name,
            'last_name' => $dto->last_name,
            'full_name' => $dto->full_name
        ]);
    }
}
